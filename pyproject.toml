[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "kilosort"
description = "A Python implementation of Kilosort, leveraging upon Numba for CPU and GPU accelerations."
readme = "README.md"
requires-python = ">=3.8"
license = "GPL-3.0-or-later"
keywords = [
  "kilosort",
  "spike-sorting",
]
authors = [
  { name = "adehad", email = "26027314+adehad@users.noreply.github.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "numba",
  "pydantic",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/adehad/pyKilosort/kilosort#readme"
Issues = "https://github.com/adehad/pyKilosort/kilosort/issues"
Source = "https://github.com/adehad/pyKilosort/kilosort"

[tool.hatch.build]
sources = ["src"]

[tool.hatch.version]
path = "src/kilosort/__about__.py"

########################################################################################
# Default environment
########################################################################################
[tool.hatch.envs.default]
python = "3.10"
dependencies = [
  # Lint
  "pre-commit>=1.17.0",
  # Docs
  "furo",
  "sphinx",
  "sphinx_copybutton",
  # Tests
  "pytest",
  "pytest-cov",
]
[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/kilosort --cov=tests {args}"
no-cov = "cov --no-cov {args}"
docs = "sphinx-build -a -n -v -W --keep-going -b html --color -d build/docs/doctree docs/ build/docs/out"
lint = "python -m pre_commit run --color=always {args:--all-files}"

########################################################################################
# Tests
########################################################################################
[[tool.hatch.envs.test.matrix]]
python = ["38", "39", "310", "311"]

########################################################################################
# External Tool Config
########################################################################################
[tool.mypy]
python_version = 3.8
warn_unused_configs = true
namespace_packages = true
plugins = "pydantic.mypy"


[tool.coverage.run]
branch = true
parallel = true
omit = [
  "src/kilosort/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
select = [
    "E", # pydocstyle
    "W", # pydocstyle
    "F", # pyflakes
    "I", # isort
    "UP", # pyupgrade
    "D", # docstrings
    "RUF", # ruff
]
ignore = []

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.8. (minimum supported)
target-version = "py38"

# The source code paths to consider, e.g., when resolving first- vs. third-party imports
src = ["kilosort", "tests"]

[tool.ruff.isort]
known-first-party = ["kilosort", "tests"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.pydocstyle]
# Use Google-style docstrings.
convention = "google"
